[
{"topic":"html","subtopic":"html","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/HTML","content":"HTML (HyperText Markup Language) ist der grundlegendste Baustein des Webs. Es beschreibt und definiert den Inhalt einer Webseite zusammen mit dem grundlegenden Layout der Webseite. Neben HTML werden im Allgemeinen andere Technologien verwendet, um das Erscheinungsbild (CSS) oder die Funktionalit\u00e4t\/Verhalten (JavaScript) einer Webseite zu beschreiben."},
{"topic":"html","subtopic":"headings","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/HTML\/Element\/h1-h6","content":"Die \u00dcberschriftenelemente bestehen aus sechs verschiedenen Leveln. <h1> ist die \u00dcberschrift mit der h\u00f6chsten Gewichtung und <h6> mit der kleinsten. Ein \u00dcberschriften-Element beschreibt das Thema des Bereiches, welcher der \u00dcberschrift folgt. \u00dcberschriften k\u00f6nnen auch verwendet werden, um ein Inhaltsverzeichnis f\u00fcr ein Dokument automatisch zu erstellen."},
{"topic":"html","subtopic":"paragraph","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/HTML\/Element\/p","content":"Das <p>-Element erzeugt einen Absatz, den zusammenh\u00e4ngenden Abschnitt eines l\u00e4ngeren Textes. In HTML kann <p> jedoch f\u00fcr jedwede Art von zu gruppierendem, zusammenh\u00e4ngendem Inhalt genutzt werden, zum Beispiel Bilder oder Formularfelder."},
{"topic":"html","subtopic":"body","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/HTML\/Element\/body","content":"Das HTML <body> Element repr\u00e4sentiert den Inhalt eines HTML Dokuments. Es gibt nur ein <body> Element in einem Dokument."},
{"topic":"html","subtopic":"link","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/HTML\/Element\/a","content":"Das HTML-Element <a> (auch HTML-Anker-Element) definiert einen Hyperlink, ein benanntes Ziel f\u00fcr einen Hyperlink oder beides."},
{"topic":"css","subtopic":"css","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/CSS","content":"Cascading Style Sheets, meistens als CSS abgek\u00fcrzt, ist eine Beschreibungssprache, die das Erscheinungsbild einer in HTML oder XML formatierten Datei (inklusive verschiedener XML-Sprachen wie SVG oder XHTML (en-US)) festlegt. CSS beschreibt, wie ein strukturiertes Element am Bildschirm, auf Papier, in Sprache oder anderen Medien dargestellt wird."},
{"topic":"css","subtopic":"selectors","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/CSS\/CSS_Selectors","content":"Selektoren definieren, auf welche Elemente eine Reihe von CSS Regeln angewendet wird."},
{"topic":"css","subtopic":"colors","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/CSS\/Farben","content":"Der CSS Datentyp Color beschreibt eine Farbe im sRGB Farbraum. Eine Farbe kann auf eine von drei Arten beschrieben werden: Schl\u00fcsselworte, rgb und rgba, hsl und hsla. ..."},
{"topic":"css","subtopic":"grid","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/CSS\/CSS_Grid_Layout","content":"CSS Grid Layout zeichnet sich dadurch aus, dass eine Seite in Hauptbereiche unterteilt wird oder die Beziehung zwischen Teilen eines Steuerelements, das aus HTML-Grundelementen besteht, in Bezug auf Gr\u00f6\u00dfe, Position und Layer definiert wird.\n\nGrid Layout erm\u00f6glicht es, Elemente in Spalten und Reihen auszurichten, \u00e4hnlich wie in Tabellen. Jedoch gibt es viel mehr Gestaltungsm\u00f6glichkeiten und diese sind einfacher umzusetzen mit CSS Grid als es mit Tabellen der Fall war. Beispielsweise kann das Kindelement eines Grid-Container-Elements so positioniert werden, dass es andere \u00fcberlappt und \u00fcberlagert, \u00e4hnlich wie bei mit CSS positionierten Elementen.\n\n"},
{"topic":"css","subtopic":"media queries","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/CSS\/Media_Queries","content":"Mit Media Queries k\u00f6nnen Sie Ihre Website oder App abh\u00e4ngig vom Vorhandensein oder Wert verschiedener Ger\u00e4teeigenschaften und Parameter anpassen.\n\nSie sind eine Schl\u00fcsselkomponente des responsiven Designs. Eine Media Query kann zum Beispiel die Schriftgr\u00f6\u00dfe auf kleinen Ger\u00e4ten verkleinern, den Abstand zwischen Abs\u00e4tzen vergr\u00f6\u00dfern, wenn eine Seite im Hochformat angezeigt wird, oder die Gr\u00f6\u00dfe von Schaltfl\u00e4chen auf Touchscreens erh\u00f6hen."},
{"topic":"javascript","subtopic":"javascript","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/JavaScript\/Guide\/Introduction#was_ist_javascript","content":"JavaScript ist eine plattform\u00fcbergreifende, objektorientierte Skriptsprache. Es ist eine kompakte und ressourcenschonende Sprache. Innerhalb einer Host-Umgebung kann JavaScript mit den Objekten seiner Umgebung verkn\u00fcpft werden, um diese programmatisch zu steuern."},
{"topic":"javascript","subtopic":"ecmascript","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/JavaScript\/Guide\/Introduction#javascript_and_the_ecmascript_specification","content":"JavaScript wird durch Ecma International standardisiert \u2014 den europ\u00e4ischen Verband zur Standardisierung von Informations- und Telekommunikationssystemen (ECMA war vormals ein Akronym f\u00fcr 'European Computer Manufacturers Association'), um eine standardisierte, internationale Programmiersprache auf der Basis von JavaScript verf\u00fcgbar zu machen. Diese standardisierte Version von JavaScript, genannt ECMAScript, verh\u00e4lt sich in allen standardkonformen Applikationen identisch. Unternehmen k\u00f6nnen die offene Sprachdefinition verwenden, um ihre eigene Implementierung von JavaScript zu entwickeln. Der ECMAScript-Standard ist in der Spezifikation ECMA-262 dokumentiert."},
{"topic":"javascript","subtopic":"prototype","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Learn\/JavaScript\/Objects\/Object_prototypes","content":"Prototypen dienen als Mechanismus, durch den JavaScript-Objekte Eigenschaften voneinander erben. In diesem Artikel erkl\u00e4ren wir, wie Prototypketten funktionieren und betrachten, wie die Prototypeneigenschaft verwendet werden kann, um Methoden zu bestehenden Konstruktoren hinzuzuf\u00fcgen."},
{"topic":"javascript","subtopic":"function","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Web\/JavaScript\/Guide\/Funktionen","content":"Funktionen sind ein Grundbaustein in JavaScript. Eine Funktion ist eine Prozedur - eine Reihe von Anweisungen, um eine Aufgabe auszuf\u00fchren oder eine Wert auszurechnen. Um Funktionen zu verwenden, m\u00fcssen diese im Scope (G\u00fcltigkeitsbereich) deklariert werden, in dem sie ausgef\u00fchrt werden soll."},
{"topic":"javascript","subtopic":"object","reference":"https:\/\/developer.mozilla.org\/de\/docs\/Learn\/JavaScript\/Objects\/Basics","content":"Ein Objekt ist eine Sammlung von zusammenh\u00e4ngenden Daten und\/oder Funktionalit\u00e4ten. Diese bestehen \u00fcblicherweise aus verschiedenen Variablen und Funktionen, die Eigenschaften und Methoden genannt werden, wenn sie sich innerhalb von Objekten befinden."}
]