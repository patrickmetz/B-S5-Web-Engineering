{"version":3,"file":"upgrade_typescript_and_functional_and_async.js","sourceRoot":"","sources":["upgrade_typescript_and_functional_and_async.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;IAGI,8BAAY,gBAAwB,EAAE,YAAoB;QAA1D,iBASC;QARG,CAAC;;;;;;wBAEO,KAAA,IAAI,CAAA;wBAAmB,qBAAM,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAA;;wBAAnE,GAAK,eAAe,GAAG,SAA4C,CAAC;wBACpE,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;;;;wBAE7C,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;;;aAExB,CAAC,EAAE,CAAC;IACT,CAAC;IAEa,kDAAmB,GAAjC,UAAkC,YAAoB;;;;;4BACjC,qBAAM,KAAK,CAAC,YAAY,CAAC,EAAA;;wBAApC,QAAQ,GAAG,SAAyB;wBAC1C,sBAAO,QAAQ,CAAC,IAAI,EAAE,EAAC;;;;KAC1B;IAEO,oDAAqB,GAA7B,UAA8B,gBAAgB;QAC1C,IAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QAE7D,IAAI,OAAuB,CAAC;QAC5B,IAAI,IAAI,GAAY,EAAE,CAAC;QAEvB,KAAgB,UAAoB,EAApB,KAAA,IAAI,CAAC,eAAe,EAApB,cAAoB,EAApB,IAAoB,EAAE;YAAjC,OAAO,SAAA;YACR,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACvE;QAED,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;IACjC,CAAC;IAEO,wCAAS,GAAjB,UACI,OAAuB,EACvB,gBAAkC,EAClC,aAA+B;QAE/B,IAAM,QAAQ,GAAG,mDAEH,OAAO,CAAC,WAAW,mCACnB,OAAO,CAAC,QAAQ,oHAIZ,OAAO,CAAC,QAAQ,6LAMhB,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,uHAIpC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,2FAIlD,CAAC;QAEF,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEO,4CAAa,GAArB,UAAsB,OAAuB;QACzC,QAAQ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE;YACjC,KAAK,QAAQ;gBACT,OAAO,kEACY,OAAO,CAAC,SAAS,CAAC,QAAQ,gDACxB,OAAO,CAAC,QAAQ,+CACd,CAAC;YAC5B,KAAK,OAAO;gBACR,OAAO,+DACY,OAAO,CAAC,SAAS,CAAC,QAAQ,8CAC1B,OAAO,CAAC,QAAQ,gDACd,OAAO,CAAC,QAAQ,wCACtB,CAAC;SACvB;IACL,CAAC;IAEO,4CAAa,GAArB,UAAsB,OAAuB;QACzC,IAAM,YAAY,GAAG,mBAAmB,CAAC;QACzC,IAAM,WAAW,GAAG,wBAAwB,CAAC;QAE7C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,KAAK,IAAI,EAAE;YAC3D,OAAO,OAAO,CAAC;SAClB;aAAM,IAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;YAC/D,OAAO,QAAQ,CAAC;SACnB;QAED,MAAM,uBAAuB,CAAC;IAClC,CAAC;IAEO,wCAAS,GAAjB,UAAkB,OAAuB;QACrC,OAAO,6BACQ,OAAO,CAAC,SAAS,CAAC,QAAQ,8CAC1B,OAAO,CAAC,SAAS,CAAC,MAAM,+CACxB,OAAO,CAAC,SAAS,CAAC,UAAU,+BAC1C,CAAC;IACN,CAAC;IAEL,2BAAC;AAAD,CAAC,AApGD,IAoGC;AAED,IAAI,oBAAoB,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC","sourcesContent":["interface TaskLinks {\n    template: string,\n    result: string,\n    sourceCode: string,\n    source: string\n}\n\ninterface LectureContent {\n    lectureName: string,\n    taskName: string,\n    taskInfo: string,\n    taskLinks: TaskLinks\n}\n\ntype TemplateFunction = (LectureContent) => string;\ntype TemplateType = \"image\" | \"iframe\";\n\nclass LectureContentLoader {\n    private _lectureContent: LectureContent[];\n\n    constructor(contentRootQuery: string, jsonFilePath: string) {\n        (async () => {\n            try {\n                this._lectureContent = await this._loadLectureContent(jsonFilePath);\n                this._renderLectureContent(contentRootQuery);\n            } catch (e) {\n                console.error(e);\n            }\n        })();\n    }\n\n    private async _loadLectureContent(jsonFilePath: string): Promise<LectureContent[]> {\n        const response = await fetch(jsonFilePath);\n        return response.json();\n    }\n\n    private _renderLectureContent(contentRootQuery) {\n        const contentRoot = document.querySelector(contentRootQuery);\n\n        let content: LectureContent;\n        let html : string = \"\";\n\n        for (content of this._lectureContent) {\n            html += this._htmlCode(content, this._templateCode, this._linkCode);\n        }\n\n        contentRoot.innerHTML = html;\n    }\n\n    private _htmlCode(\n        content: LectureContent,\n        templateFunction: TemplateFunction,\n        linksFunction: TemplateFunction,\n    ): string {\n        const htmlCode = `\n             <section>\n                <h3>${content.lectureName}</h3>\n                <h4>${content.taskName}</h4>\n        \n                <ul class=\"taskInfo\">\n                    <li>\n                        ${content.taskInfo}\n                    </li>\n                </ul>\n        \n                <div class=\"taskDetails\">\n                    <div class=\"taskTemplate\">\n                        ${templateFunction.call(this, content)}\n                    </div>\n        \n                    <div class=\"taskLinks\">\n                        ${linksFunction.call(this, content)}\n                    </div>\n                </div>\n            </section>\n        `;\n\n        return htmlCode;\n    }\n\n    private _templateCode(content: LectureContent): string {\n        switch (this._templateType(content)) {\n            case \"iframe\":\n                return `<iframe loading=\"lazy\" \n                            src=\"${content.taskLinks.template}\"\n                            title=\"${content.taskName}\"\n                            ></iframe>`;\n            case \"image\":\n                return `<img loading=\"lazy\" \n                            src=\"${content.taskLinks.template}\"\n                            alt=\"${content.taskName}\"\n                            title=\"${content.taskName}\"\n                            \">`;\n        }\n    }\n\n    private _templateType(content: LectureContent): TemplateType {\n        const pictureRegex = /png|jpg|jpeg|gif$/;\n        const iframeRegex = /youtube\\.com|youtu\\.be/;\n\n        if ((content.taskLinks.template.match(pictureRegex)) !== null) {\n            return \"image\";\n        } else if (content.taskLinks.template.match(iframeRegex) !== null) {\n            return \"iframe\";\n        }\n\n        throw \"unknown template type\";\n    }\n\n    private _linkCode(content: LectureContent): string {\n        return `\n            <a href=\"${content.taskLinks.template}\">Vorlage</a>\n            <a href=\"${content.taskLinks.result}\">Ergebnis</a>\n            <a href=\"${content.taskLinks.sourceCode}\">Quellcode</a>\n        `;\n    }\n\n}\n\nnew LectureContentLoader(\"article\", \"./content.json\");"]}